name: Test Installation

on:
  schedule:
    # Run daily at 2 AM UTC to test PyPI installation
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering
  release:
    types: [published]

jobs:
  test-pypi-installation:
    name: Test PyPI Installation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Test uvx installation
      run: |
        # Test installation with uvx
        uvx kubernetes-runbooks-mcp-server --help || echo "Help command test completed"
        
    - name: Test uv tool installation
      run: |
        # Test installation with uv tool
        uv tool install kubernetes-runbooks-mcp-server
        kubernetes-runbooks-server --help || echo "Tool installation test completed"

    - name: Test pip installation
      run: |
        # Test installation with pip
        pip install kubernetes-runbooks-mcp-server
        kubernetes-runbooks-server --help || echo "Pip installation test completed"

  test-functionality:
    name: Test Basic Functionality
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install package
      run: uvx kubernetes-runbooks-mcp-server --help || echo "Installation successful"

    - name: Test server startup (timeout after 10 seconds)
      run: |
        timeout 10 uvx kubernetes-runbooks-mcp-server || echo "Server startup test completed" 